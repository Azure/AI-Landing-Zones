{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "4542466353527785512"
    }
  },
  "definitions": {
    "vmMaintenanceDefinitionType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "metadata": {
            "description": "Required. Name of the Maintenance Configuration."
          }
        },
        "enableTelemetry": {
          "type": "bool",
          "nullable": true,
          "metadata": {
            "description": "Optional. Enable or disable usage telemetry for the module. Default is true."
          }
        },
        "extensionProperties": {
          "type": "object",
          "properties": {},
          "additionalProperties": {
            "type": "string",
            "metadata": {
              "description": "Optional. Arbitrary key for each extension property."
            }
          },
          "nullable": true,
          "metadata": {
            "description": "Optional. Extension properties of the Maintenance Configuration."
          }
        },
        "installPatches": {
          "type": "object",
          "properties": {},
          "additionalProperties": {
            "type": "string",
            "metadata": {
              "description": "Optional. Arbitrary key for each patch configuration property."
            }
          },
          "nullable": true,
          "metadata": {
            "description": "Optional. Configuration settings for VM guest patching with Azure Update Manager."
          }
        },
        "location": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. Resource location. Defaults to the resource group location."
          }
        },
        "lock": {
          "type": "object",
          "properties": {
            "kind": {
              "type": "string",
              "allowedValues": [
                "CanNotDelete",
                "None",
                "ReadOnly"
              ],
              "nullable": true,
              "metadata": {
                "description": "Optional. Lock type."
              }
            },
            "name": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Optional. Lock name."
              }
            },
            "notes": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Optional. Lock notes."
              }
            }
          },
          "nullable": true,
          "metadata": {
            "description": "Optional. Lock configuration for the Maintenance Configuration."
          }
        },
        "maintenanceScope": {
          "type": "string",
          "allowedValues": [
            "Extension",
            "Host",
            "InGuestPatch",
            "OSImage",
            "SQLDB",
            "SQLManagedInstance"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. Maintenance scope of the configuration. Default is Host."
          }
        },
        "maintenanceWindow": {
          "type": "object",
          "properties": {},
          "additionalProperties": {
            "type": "string",
            "metadata": {
              "description": "Optional. Arbitrary key for each maintenance window property."
            }
          },
          "nullable": true,
          "metadata": {
            "description": "Optional. Definition of the Maintenance Window."
          }
        },
        "namespace": {
          "type": "string",
          "nullable": true,
          "metadata": {
            "description": "Optional. Namespace of the resource."
          }
        },
        "roleAssignments": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "principalId": {
                "type": "string",
                "metadata": {
                  "description": "Required. Principal ID of the identity being assigned."
                }
              },
              "roleDefinitionIdOrName": {
                "type": "string",
                "metadata": {
                  "description": "Required. Role to assign (display name, GUID, or full resource ID)."
                }
              },
              "condition": {
                "type": "string",
                "nullable": true,
                "metadata": {
                  "description": "Optional. Condition for the role assignment."
                }
              },
              "conditionVersion": {
                "type": "string",
                "allowedValues": [
                  "2.0"
                ],
                "nullable": true,
                "metadata": {
                  "description": "Optional. Condition version."
                }
              },
              "delegatedManagedIdentityResourceId": {
                "type": "string",
                "nullable": true,
                "metadata": {
                  "description": "Optional. Delegated managed identity resource ID."
                }
              },
              "description": {
                "type": "string",
                "nullable": true,
                "metadata": {
                  "description": "Optional. Description of the role assignment."
                }
              },
              "name": {
                "type": "string",
                "nullable": true,
                "metadata": {
                  "description": "Optional. Role assignment name (GUID). If omitted, a GUID is generated."
                }
              },
              "principalType": {
                "type": "string",
                "allowedValues": [
                  "Device",
                  "ForeignGroup",
                  "Group",
                  "ServicePrincipal",
                  "User"
                ],
                "nullable": true,
                "metadata": {
                  "description": "Optional. Principal type of the assigned identity."
                }
              }
            }
          },
          "nullable": true,
          "metadata": {
            "description": "Optional. Role assignments to apply to the Maintenance Configuration."
          }
        },
        "tags": {
          "type": "object",
          "properties": {},
          "additionalProperties": {
            "type": "string",
            "metadata": {
              "description": "Required. Arbitrary key for each tag."
            }
          },
          "nullable": true,
          "metadata": {
            "description": "Optional. Tags to apply to the Maintenance Configuration resource."
          }
        },
        "visibility": {
          "type": "string",
          "allowedValues": [
            "",
            "Custom",
            "Public"
          ],
          "nullable": true,
          "metadata": {
            "description": "Optional. Visibility of the configuration. Default is Custom."
          }
        }
      },
      "metadata": {
        "description": "Configuration object for a VM Maintenance Configuration resource.",
        "__bicep_imported_from!": {
          "sourceTemplate": "../common/types.bicep"
        }
      }
    }
  },
  "parameters": {
    "maintenanceConfig": {
      "$ref": "#/definitions/vmMaintenanceDefinitionType",
      "metadata": {
        "description": "Maintenance Configuration."
      }
    }
  },
  "resources": {
    "inner": {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('maint-avm-{0}', parameters('maintenanceConfig').name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('maintenanceConfig').name]"
          },
          "location": {
            "value": "[tryGet(parameters('maintenanceConfig'), 'location')]"
          },
          "tags": {
            "value": "[tryGet(parameters('maintenanceConfig'), 'tags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.34.44.8038",
              "templateHash": "16060601297152129929"
            },
            "name": "Maintenance Configurations",
            "description": "This module deploys a Maintenance Configuration."
          },
          "definitions": {
            "lockType": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "nullable": true,
                  "metadata": {
                    "description": "Optional. Specify the name of lock."
                  }
                },
                "kind": {
                  "type": "string",
                  "allowedValues": [
                    "CanNotDelete",
                    "None",
                    "ReadOnly"
                  ],
                  "nullable": true,
                  "metadata": {
                    "description": "Optional. Specify the type of lock."
                  }
                }
              },
              "metadata": {
                "description": "An AVM-aligned type for a lock.",
                "__bicep_imported_from!": {
                  "sourceTemplate": "br:mcr.microsoft.com/bicep/avm/utl/types/avm-common-types:0.5.1"
                }
              }
            },
            "roleAssignmentType": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "nullable": true,
                  "metadata": {
                    "description": "Optional. The name (as GUID) of the role assignment. If not provided, a GUID will be generated."
                  }
                },
                "roleDefinitionIdOrName": {
                  "type": "string",
                  "metadata": {
                    "description": "Required. The role to assign. You can provide either the display name of the role definition, the role definition GUID, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'."
                  }
                },
                "principalId": {
                  "type": "string",
                  "metadata": {
                    "description": "Required. The principal ID of the principal (user/group/identity) to assign the role to."
                  }
                },
                "principalType": {
                  "type": "string",
                  "allowedValues": [
                    "Device",
                    "ForeignGroup",
                    "Group",
                    "ServicePrincipal",
                    "User"
                  ],
                  "nullable": true,
                  "metadata": {
                    "description": "Optional. The principal type of the assigned principal ID."
                  }
                },
                "description": {
                  "type": "string",
                  "nullable": true,
                  "metadata": {
                    "description": "Optional. The description of the role assignment."
                  }
                },
                "condition": {
                  "type": "string",
                  "nullable": true,
                  "metadata": {
                    "description": "Optional. The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \"foo_storage_container\"."
                  }
                },
                "conditionVersion": {
                  "type": "string",
                  "allowedValues": [
                    "2.0"
                  ],
                  "nullable": true,
                  "metadata": {
                    "description": "Optional. Version of the condition."
                  }
                },
                "delegatedManagedIdentityResourceId": {
                  "type": "string",
                  "nullable": true,
                  "metadata": {
                    "description": "Optional. The Resource Id of the delegated managed identity resource."
                  }
                }
              },
              "metadata": {
                "description": "An AVM-aligned type for a role assignment.",
                "__bicep_imported_from!": {
                  "sourceTemplate": "br:mcr.microsoft.com/bicep/avm/utl/types/avm-common-types:0.5.1"
                }
              }
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. Maintenance Configuration Name."
              }
            },
            "enableTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable/Disable usage telemetry for module."
              }
            },
            "extensionProperties": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Gets or sets extensionProperties of the maintenanceConfiguration."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. Location for all Resources."
              }
            },
            "lock": {
              "$ref": "#/definitions/lockType",
              "nullable": true,
              "metadata": {
                "description": "Optional. The lock settings of the service."
              }
            },
            "maintenanceScope": {
              "type": "string",
              "defaultValue": "Host",
              "allowedValues": [
                "Host",
                "OSImage",
                "Extension",
                "InGuestPatch",
                "SQLDB",
                "SQLManagedInstance"
              ],
              "metadata": {
                "description": "Optional. Gets or sets maintenanceScope of the configuration."
              }
            },
            "maintenanceWindow": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Definition of a MaintenanceWindow."
              }
            },
            "namespace": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Gets or sets namespace of the resource."
              }
            },
            "roleAssignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/roleAssignmentType"
              },
              "nullable": true,
              "metadata": {
                "description": "Optional. Array of role assignments to create."
              }
            },
            "tags": {
              "type": "object",
              "nullable": true,
              "metadata": {
                "description": "Optional. Gets or sets tags of the resource."
              }
            },
            "visibility": {
              "type": "string",
              "defaultValue": "",
              "allowedValues": [
                "",
                "Custom",
                "Public"
              ],
              "metadata": {
                "description": "Optional. Gets or sets the visibility of the configuration. The default value is 'Custom'."
              }
            },
            "installPatches": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Configuration settings for VM guest patching with Azure Update Manager."
              }
            }
          },
          "variables": {
            "copy": [
              {
                "name": "formattedRoleAssignments",
                "count": "[length(coalesce(parameters('roleAssignments'), createArray()))]",
                "input": "[union(coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')], createObject('roleDefinitionId', coalesce(tryGet(variables('builtInRoleNames'), coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName), if(contains(coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName, '/providers/Microsoft.Authorization/roleDefinitions/'), coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName, subscriptionResourceId('Microsoft.Authorization/roleDefinitions', coalesce(parameters('roleAssignments'), createArray())[copyIndex('formattedRoleAssignments')].roleDefinitionIdOrName)))))]"
              }
            ],
            "builtInRoleNames": {
              "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
              "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
              "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
              "Role Based Access Control Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f58310d9-a9f6-439a-9e8d-f62e7b41a168')]",
              "Scheduled Patching Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'cd08ab90-6b14-449c-ad9a-8f8e549482c6')]",
              "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
            }
          },
          "resources": {
            "avmTelemetry": {
              "condition": "[parameters('enableTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2024-03-01",
              "name": "[format('46d3xbcp.res.maintenance-maintenanceconfiguration.{0}.{1}', replace('0.3.1', '.', '-'), substring(uniqueString(deployment().name, parameters('location')), 0, 4))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": [],
                  "outputs": {
                    "telemetry": {
                      "type": "String",
                      "value": "For more information, see https://aka.ms/avm/TelemetryInfo"
                    }
                  }
                }
              }
            },
            "maintenanceConfiguration": {
              "type": "Microsoft.Maintenance/maintenanceConfigurations",
              "apiVersion": "2023-04-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "extensionProperties": "[parameters('extensionProperties')]",
                "maintenanceScope": "[parameters('maintenanceScope')]",
                "maintenanceWindow": "[parameters('maintenanceWindow')]",
                "namespace": "[parameters('namespace')]",
                "visibility": "[parameters('visibility')]",
                "installPatches": "[if(equals(parameters('maintenanceScope'), 'InGuestPatch'), parameters('installPatches'), null())]"
              }
            },
            "maintenanceConfiguration_lock": {
              "condition": "[and(not(empty(coalesce(parameters('lock'), createObject()))), not(equals(tryGet(parameters('lock'), 'kind'), 'None')))]",
              "type": "Microsoft.Authorization/locks",
              "apiVersion": "2020-05-01",
              "scope": "[format('Microsoft.Maintenance/maintenanceConfigurations/{0}', parameters('name'))]",
              "name": "[coalesce(tryGet(parameters('lock'), 'name'), format('lock-{0}', parameters('name')))]",
              "properties": {
                "level": "[coalesce(tryGet(parameters('lock'), 'kind'), '')]",
                "notes": "[if(equals(tryGet(parameters('lock'), 'kind'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot delete or modify the resource or child resources.')]"
              },
              "dependsOn": [
                "maintenanceConfiguration"
              ]
            },
            "maintenanceConfiguration_roleAssignments": {
              "copy": {
                "name": "maintenanceConfiguration_roleAssignments",
                "count": "[length(coalesce(variables('formattedRoleAssignments'), createArray()))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Maintenance/maintenanceConfigurations/{0}', parameters('name'))]",
              "name": "[coalesce(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'name'), guid(resourceId('Microsoft.Maintenance/maintenanceConfigurations', parameters('name')), coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].principalId, coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].roleDefinitionId))]",
              "properties": {
                "roleDefinitionId": "[coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].roleDefinitionId]",
                "principalId": "[coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()].principalId]",
                "description": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'description')]",
                "principalType": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'principalType')]",
                "condition": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'condition')]",
                "conditionVersion": "[if(not(empty(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'condition'))), coalesce(tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'conditionVersion'), '2.0'), null())]",
                "delegatedManagedIdentityResourceId": "[tryGet(coalesce(variables('formattedRoleAssignments'), createArray())[copyIndex()], 'delegatedManagedIdentityResourceId')]"
              },
              "dependsOn": [
                "maintenanceConfiguration"
              ]
            }
          },
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "The name of the Maintenance Configuration."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "The resource ID of the Maintenance Configuration."
              },
              "value": "[resourceId('Microsoft.Maintenance/maintenanceConfigurations', parameters('name'))]"
            },
            "resourceGroupName": {
              "type": "string",
              "metadata": {
                "description": "The name of the resource group the Maintenance Configuration was created in."
              },
              "value": "[resourceGroup().name]"
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location the Maintenance Configuration was created in."
              },
              "value": "[reference('maintenanceConfiguration', '2023-04-01', 'full').location]"
            }
          }
        }
      }
    }
  },
  "outputs": {
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the Maintenance Configuration."
      },
      "value": "[reference('inner').outputs.resourceId.value]"
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "The resource name of the Maintenance Configuration."
      },
      "value": "[reference('inner').outputs.name.value]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group the Maintenance Configuration was deployed into."
      },
      "value": "[reference('inner').outputs.resourceGroupName.value]"
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The location the resource was deployed into."
      },
      "value": "[reference('inner').outputs.location.value]"
    }
  }
}